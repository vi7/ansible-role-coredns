---
- name: Install packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
  - python3
  - python3-pip
  - python3-docker
  tags:
  - prerequisites

- name: Coredns Populate service facts
  ansible.builtin.service_facts:
  tags:
  - prerequisites

- name: Coredns Disable a local systemd-resolved DNS stub listener
  block:
  - name: Coredns Create systemd-resolved config dir
    ansible.builtin.file:
      path: /etc/systemd/resolved.conf.d
      state: directory
      mode: '0755'

  - name: Coredns Deploy systemd-resolved config file
    ansible.builtin.template:
      src: 01-disable_dnsstub.conf.j2
      dest: /etc/systemd/resolved.conf.d/01-disable_dnsstub.conf
      force: true
      owner: root
      group: root
      mode: '0644'
  when: "'systemd-resolved.service' in ansible_facts.services"
  notify:
  - Restart systemd-resolved service
  tags:
  - prerequisites

- name: Coredns Create dirs
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
  - "{{ coredns_config_dir }}"
  - "{{ coredns_zones_dir }}"
  tags:
  - configuration

- name: Coredns Create config file
  ansible.builtin.template:
    src: Corefile.j2
    dest: "{{ coredns_config_dir }}/Corefile"
    force: true
    owner: root
    group: root
    mode: '0644'
  tags:
  - configuration

- name: Coredns Create zone files
  ansible.builtin.copy:
    src: "{{ item.path }}"
    dest: "{{ coredns_zones_dir }}/db.{{ item.zone }}"
    owner: root
    group: root
    mode: '0644'
  loop: "{{ coredns_zonefiles }}"
  tags:
  - configuration

- name: Coredns Run container
  community.docker.docker_container:
    name: "{{ coredns_container_name }}"
    hostname: "{{ coredns_container_name }}"
    image: "{{ coredns_image }}:{{ coredns_version }}"
    container_default_behavior: compatibility
    command:
    - "-conf {{ coredns_container_config_dir }}/Corefile"
    command_handling: correct
    state: started
    ports:
    - "53:53/udp"
    restart: "{{ coredns_container_restart }}"
    recreate: "{{ coredns_container_recreate }}"
    restart_policy: unless-stopped
    log_driver: journald
    log_options:
      tag: "{{ '{{' }}.Name{{ '}}' }}"
    volumes:
    - "{{ coredns_config_dir }}:{{ coredns_container_config_dir }}:ro"
  tags:
  - deployment
